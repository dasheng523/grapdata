<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="842f1f30-5306-42cb-bbaf-cb86e780eb0d" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/resources/sql/article.sql" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/src/learn/article.clj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/src/learn/phonecode.clj" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/src/learn/twitter.clj" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_apache_commons_commons_lang3_3_3_2.xml" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__xalan_2_7_1.xml" afterPath="" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/phantomjsdriver.log" afterPath="$PROJECT_DIR$/phantomjsdriver.log" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/project.clj" afterPath="$PROJECT_DIR$/project.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/sql/users.sql" afterPath="$PROJECT_DIR$/resources/sql/users.sql" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/learn/db.clj" afterPath="$PROJECT_DIR$/src/learn/db.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/learn/email.clj" afterPath="$PROJECT_DIR$/src/learn/email.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/learn/facebook.clj" afterPath="$PROJECT_DIR$/src/learn/facebook.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/learn/newdriver.clj" afterPath="$PROJECT_DIR$/src/learn/newdriver.clj" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="project.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="324">
              <caret line="18" column="16" lean-forward="false" selection-start-line="18" selection-start-column="16" selection-end-line="18" selection-end-column="16" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="article.sql" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/resources/sql/article.sql">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="414">
              <caret line="26" column="9" lean-forward="true" selection-start-line="26" selection-start-column="9" selection-end-line="26" selection-end-column="19" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="article.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/learn/article.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="448">
              <caret line="177" column="21" lean-forward="true" selection-start-line="177" selection-start-column="21" selection-end-line="177" selection-end-column="21" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="db.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/learn/db.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="198">
              <caret line="11" column="19" lean-forward="false" selection-start-line="11" selection-start-column="19" selection-end-line="11" selection-end-column="19" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>验证帐户</find>
      <find>male-name</find>
      <find>mysql-create-users-table</find>
      <find>get-email</find>
      <find>addAdditionalPreference</find>
      <find>setCapability</find>
      <find>chrome</find>
      <find>selenium</find>
      <find>grap-db</find>
      <find>insert-table-tuple</find>
      <find>json</find>
      <find>to-str</find>
      <find>original-article</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/learn/utils.clj" />
        <option value="$PROJECT_DIR$/phantomjsdriver.log" />
        <option value="$PROJECT_DIR$/src/log4j.xml" />
        <option value="$PROJECT_DIR$/src/datawarehouse/dbsqldetail.clj" />
        <option value="$PROJECT_DIR$/resources/name/female-names.txt" />
        <option value="$PROJECT_DIR$/resources/name/male-names.txt" />
        <option value="$PROJECT_DIR$/resources/name/name.txt" />
        <option value="$PROJECT_DIR$/src/learn/name.clj" />
        <option value="$PROJECT_DIR$/resources/sql/mail.sql" />
        <option value="$PROJECT_DIR$/src/dbconfig.clj" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/src/learn/email.clj" />
        <option value="$PROJECT_DIR$/resources/sql/users.sql" />
        <option value="$PROJECT_DIR$/src/learn/db.clj" />
        <option value="$PROJECT_DIR$/src/learn/twitter.clj" />
        <option value="$PROJECT_DIR$/src/learn/phonecode.clj" />
        <option value="$PROJECT_DIR$/src/learn/facebook.clj" />
        <option value="$PROJECT_DIR$/resources/sql/wordpress.sql" />
        <option value="$PROJECT_DIR$/src/learn/wordpress.clj" />
        <option value="$MAVEN_REPOSITORY$/org/seleniumhq/selenium/selenium-firefox-driver/2.45.0/selenium-firefox-driver-2.45.0.jar!/org/openqa/selenium/firefox/FirefoxProfile.class" />
        <option value="$PROJECT_DIR$/src/learn/newdriver.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/resources/sql/article.sql" />
        <option value="$PROJECT_DIR$/src/learn/article.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="7">
    <option name="x" value="260" />
    <option name="y" value="20" />
    <option name="width" value="1400" />
    <option name="height" value="1000" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane">
        <subPane>
          <expand>
            <path>
              <item name="grapdata" type="58d84e3e:PackageViewProjectNode" />
              <item name="grapdata" type="616d4139:PackageViewModuleNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="grapdata" type="b2602c69:ProjectViewProjectNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="grapdata" type="b2602c69:ProjectViewProjectNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
              <item name="resources" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="grapdata" type="b2602c69:ProjectViewProjectNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
              <item name="resources" type="462c0819:PsiDirectoryNode" />
              <item name="sql" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="grapdata" type="b2602c69:ProjectViewProjectNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="grapdata" type="b2602c69:ProjectViewProjectNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="grapdata" type="b2602c69:ProjectViewProjectNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="learn" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="grapdata" type="b2602c69:ProjectViewProjectNode" />
              <item name="grapdata" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="pingtai" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="configurable.group.editor" />
    <property name="cursive.last.file.extension.E\:/grapdata/src" value="clj" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\grapdata\src" />
    </key>
  </component>
  <component name="ReplState" timestamp="1505733319667">{:repl-history {:ide [], :local [{:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace  #\&quot;\\{ \\}\&quot; \&quot;\&quot;)))&quot;, :offset 489, :ns &quot;learn.article&quot;} {:command &quot;(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (when (and (str/index-of html \&quot;&lt;div class=\\\&quot;entry-content\\\&quot;&gt;\&quot;)\n             (str/index-of html \&quot;entry-header overlay\&quot;))\n    (let [nodes (change-nodes html)]\n      {:title (-&gt; (enlive/select nodes [:h1.entry-title :p])\n                  first\n                  :content)\n       :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))&quot;, :offset 544, :ns &quot;learn.article&quot;} {:command &quot;(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (let [original-article (parse-article html)\n            article-info {:title (str/trim (change-article (:title original-article)))\n                          :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}]\n        (println article-info)\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 817, :ns &quot;learn.article&quot;} {:command &quot;\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace  #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace  #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (when (and (str/index-of html \&quot;&lt;div class=\\\&quot;entry-content\\\&quot;&gt;\&quot;)\n             (str/index-of html \&quot;entry-header overlay\&quot;))\n    (let [nodes (change-nodes html)]\n      {:title (-&gt; (enlive/select nodes [:h1.entry-title])\n                  first\n                  :content)\n       :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n&quot;, :offset 1065, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (let [original-article (parse-article html)\n            article-info {:title (str/trim (change-article (:title original-article)))\n                          :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}]\n        (println article-info)\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 535, :ns &quot;learn.article&quot;} {:command &quot;\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace  #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace  #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (when (and (str/index-of html \&quot;&lt;div class=\\\&quot;entry-content\\\&quot;&gt;\&quot;)\n             (str/index-of html \&quot;entry-header overlay\&quot;))\n    (let [nodes (change-nodes html)]\n      {:title (-&gt; (enlive/select nodes [:h1.entry-title])\n                  first\n                  (enlive/text))\n       :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (let [original-article (parse-article html)\n            article-info {:title (str/trim (change-article (:title original-article)))\n                          :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}]\n        (println article-info)\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 1887, :ns &quot;learn.article&quot;} {:command &quot;(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (when (and (str/index-of html \&quot;&lt;div class=\\\&quot;entry-content\\\&quot;&gt;\&quot;)\n             (str/index-of html \&quot;entry-header overlay\&quot;))\n    (let [nodes (change-nodes html)]\n      {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                  first\n                  (enlive/text))\n       :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))&quot;, :offset 567, :ns &quot;learn.article&quot;} {:command &quot;\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (when (and (str/index-of html \&quot;&lt;div class=\\\&quot;entry-content\\\&quot;&gt;\&quot;)\n             (str/index-of html \&quot;entry-header overlay\&quot;))\n    (let [nodes (change-nodes html)]\n      {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                  first\n                  (enlive/text))\n       :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (let [original-article (parse-article html)\n            article-info {:title (str/trim (change-article (:title original-article)))\n                          :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}]\n        (println article-info)\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 1906, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (let [original-article (parse-article html)\n            article-info {:title (str/trim (change-article (:title original-article)))\n                          :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}]\n        (println original-article)\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 538, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (if-let [original-article (parse-article html)]\n        (println {:title (str/trim (change-article (:title original-article)))\n                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 491, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)))\n\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (when (and (str/index-of html \&quot;&lt;div class=\\\&quot;entry-content\\\&quot;&gt;\&quot;)\n             (str/index-of html \&quot;entry-header overlay\&quot;))\n    (let [nodes (change-nodes html)]\n      {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                  first\n                  (enlive/text))\n       :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (if-let [original-article (parse-article html)]\n        (println {:title (str/trim (change-article (:title original-article)))\n                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 1834, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (when (and (str/index-of html \&quot;&lt;div class=\\\&quot;entry-content\\\&quot;&gt;\&quot;)\n             (str/index-of html \&quot;entry-header overlay\&quot;))\n    (let [nodes (change-nodes html)]\n      {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                  first\n                  (enlive/text))\n       :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (if-let [original-article (parse-article html)]\n        (println {:title (str/trim (change-article (:title original-article)))\n                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n        #_(push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 1863, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))&quot;, :offset 480, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body))\n\n(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)&quot;, :offset 471, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (change-nodes )\n    #_(str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    #_(str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)\n&quot;, :offset 594, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (change-nodes)\n    (enlive/text)\n    #_(str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    #_(str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)&quot;, :offset 610, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (change-nodes)\n    (enlive/text)\n    #_(str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    #_(str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)\n&quot;, :offset 611, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)&quot;, :offset 630, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (if-let [original-article (parse-article html)]\n        #_(println {:title (str/trim (change-article (:title original-article)))\n                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n        (push-article domain article-info)))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 492, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (if-let [original-article (parse-article html)]\n        #_(println {:title (str/trim (change-article (:title original-article)))\n                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n        (push-article domain {:title (str/trim (change-article (:title original-article)))\n                              :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 675, :ns &quot;learn.article&quot;} {:command &quot;(defn- change-nodes [html]\n  (-&gt;\n    html\n    (StringReader.)\n    (enlive/html-resource)))\n\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)]\n    {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                first\n                (enlive/text))\n     :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                  (#(map (fn [n]\n                           (enlive/text n))\n                         %))\n                  (#(str/join \&quot;\\n\&quot; %)))})\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (doseq [html html-list]\n      (if-let [original-article (parse-article html)]\n        (println {:title (str/trim (change-article (:title original-article)))\n                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n        #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                              :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 2214, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (map #(:html %) (take 5 (get-all-article-html article-db)))]\n    (println (map #(:url %) (take 5 (get-all-article-html article-db))))\n    (doseq [html html-list]\n      (if-let [original-article (parse-article html)]\n        (println {:title (str/trim (change-article (:title original-article)))\n                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n        #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                              :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 748, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)]\n    {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                first\n                (enlive/text))\n     :article (-&gt; (enlive/select nodes [:div.entry-content :&gt; :p])\n                  (#(map (fn [n]\n                           (enlive/text n))\n                         %))\n                  (#(str/join \&quot;\\n\&quot; %)))})\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (if-let [original-article (parse-article html)]\n          (println {:title (str/trim (change-article (:title original-article)))\n                    :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 1548, :ns &quot;learn.article&quot;} {:command &quot;(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)]\n    {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                first\n                (enlive/text))\n     :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                  (#(map (fn [n]\n                           (enlive/text n))\n                         %))\n                  (#(str/join \&quot;\\n\&quot; %)))})\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))&quot;, :offset 532, :ns &quot;learn.article&quot;} {:command &quot;\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (enlive/html-content)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)]\n    {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                first\n                (enlive/text))\n     :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                  (#(map (fn [n]\n                           (enlive/text n))\n                         %))\n                  (#(str/join \&quot;\\n\&quot; %)))})\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (println {:title (str/trim (change-article (:title original-article)))\n                    :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 2165, :ns &quot;learn.article&quot;} {:command &quot;(ns learn.article\n  (:require [clj-http.client :as http]\n            [clojure.string :as str]\n            [hugsql.core :as hugsql]\n            [net.cgrand.enlive-html :as enlive]\n            [clojure.core.async :as async]\n            [clojure.data]\n            [cheshire.core :as json])\n  (:import (java.io StringReader)))\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 数据库相关\n(def article-db\n  {:classname \&quot;com.mysql.jdbc.Driver\&quot;\n   :subprotocol \&quot;mysql\&quot;\n   :subname \&quot;//127.0.0.1/article\&quot;\n   :user \&quot;root\&quot;\n   :password \&quot;a5235013\&quot;\n   :sslmode \&quot;require\&quot;})\n\n(hugsql/def-db-fns \&quot;sql/article.sql\&quot; {:quoting :mysql})\n&quot;, :offset 595, :ns &quot;grapdata.core&quot;} {:command &quot;(defn- change-nodes [html]\n  (-&gt;\n    html\n    (StringReader.)\n    (enlive/html-resource)))\n\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (enlive/html-content)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n&quot;, :offset 636, :ns &quot;learn.article&quot;} {:command &quot;(change-article \&quot;Zeus Thunder 2 Vaporizer Review\&quot;)&quot;, :offset 50, :ns &quot;learn.article&quot;} {:command &quot;(enlive/html-content \&quot;&lt;p&gt;sadfasdfasdf&lt;/p&gt;\&quot;)&quot;, :offset 43, :ns &quot;learn.article&quot;} {:command &quot;(enlive/content \&quot;&lt;p&gt;sadfasdfasdf&lt;/p&gt;\&quot;)&quot;, :offset 38, :ns &quot;learn.article&quot;} {:command &quot;(enlive/content (enlive/html \&quot;&lt;p&gt;sadfasdfasdf&lt;/p&gt;\&quot;))&quot;, :offset 52, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n&quot;, :offset 580, :ns &quot;learn.article&quot;} {:command &quot;\n(parse-article (:html (select-article-by-url \&quot;http://www.vaporvanity.com/best-18650-batteries-vaping/\&quot;)))\n&quot;, :offset 107, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)]\n    {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                first\n                (enlive/text))\n     :article (-&gt; (enlive/select nodes [:div.entry-content :p])\n                  (#(map (fn [n]\n                           (enlive/text n))\n                         %))\n                  (#(str/join \&quot;\\n\&quot; %)))})\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(parse-article (:html (select-article-by-url \&quot;http://www.vaporvanity.com/best-18650-batteries-vaping/\&quot;)))\n&quot;, :offset 641, :ns &quot;learn.article&quot;} {:command &quot;(parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/best-18650-batteries-vaping/\&quot;})))\n&quot;, :offset 124, :ns &quot;learn.article&quot;} {:command &quot;(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)]\n    {:title (-&gt; (enlive/select nodes [:header.entry-header :h1.entry-title])\n                first\n                (enlive/text))\n     :article (-&gt; (enlive/select nodes [:div.entry-content :&gt; :p])\n                  (#(map (fn [n]\n                           (enlive/text n))\n                         %))\n                  (#(str/join \&quot;\\n\&quot; %)))})\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/best-18650-batteries-vaping/\&quot;})))\n&quot;, :offset 661, :ns &quot;learn.article&quot;} {:command &quot;(if-let [s 1\n         a true]\n  1)&quot;, :offset 34, :ns &quot;grapdata.core&quot;} {:command &quot;(if-let [s 1]\n  1)&quot;, :offset 18, :ns &quot;grapdata.core&quot;} {:command &quot;(and 1 \&quot;333\&quot;)&quot;, :offset 13, :ns &quot;grapdata.core&quot;} {:command &quot;(and \&quot;1\&quot; \&quot;333\&quot;)&quot;, :offset 15, :ns &quot;grapdata.core&quot;} {:command &quot;(and nil \&quot;2222\&quot;)&quot;, :offset 16, :ns &quot;grapdata.core&quot;} {:command &quot;\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and title-node content-node)\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})\n    )\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/best-18650-batteries-vaping/\&quot;})))\n&quot;, :offset 788, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and title-node content-node)\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article content-node})\n    )\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/best-18650-batteries-vaping/\&quot;})))\n&quot;, :offset 630, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})\n    )\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/best-18650-batteries-vaping/\&quot;})))\n&quot;, :offset 812, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})\n    )\n  #_(when (and (str/index-of html \&quot;entry-content\&quot;)\n             (str/index-of html \&quot;entry-header\&quot;))\n    ))\n\n(parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))\n&quot;, :offset 858, :ns &quot;learn.article&quot;} {:command &quot;(defn- change-nodes [html]\n  (-&gt;\n    html\n    (StringReader.)\n    (enlive/html-resource)))\n\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})\n    ))\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          #_(println {:title (str/trim (change-article (:title original-article)))\n                    :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})})\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                  :article (str/escape (change-article (:article original-article)) {\\&lt; \&quot;&amp;lt;\&quot;, \\&gt; \&quot;&amp;gt;\&quot;, \\&amp; \&quot;&amp;amp;\&quot;})}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 2287, :ns &quot;learn.article&quot;} {:command &quot;(defn- wrap-paragraph [text]\n  (str/split text #\&quot;\\n\&quot;))&quot;, :offset 54, :ns &quot;learn.article&quot;} {:command &quot;(wrap-paragraph \&quot;sadfasdf\\nasdfasdf\&quot;)&quot;, :offset 37, :ns &quot;learn.article&quot;} {:command &quot;((enlive/wrap :div) \&quot;ssss\&quot;)&quot;, :offset 27, :ns &quot;learn.article&quot;} {:command &quot;(enlive/unwrap ((enlive/wrap :div) \&quot;ssss\&quot;))&quot;, :offset 43, :ns &quot;learn.article&quot;} {:command &quot;(.toString ((enlive/wrap :div) \&quot;ssss\&quot;))&quot;, :offset 39, :ns &quot;learn.article&quot;} {:command &quot;(enlive/html (.toString ((enlive/wrap :div) \&quot;ssss\&quot;)))&quot;, :offset 53, :ns &quot;learn.article&quot;} {:command &quot;(enlive/html ((enlive/wrap :div) \&quot;ssss\&quot;))&quot;, :offset 41, :ns &quot;learn.article&quot;} {:command &quot;(enlive/emit* ((enlive/wrap :div) \&quot;ssss\&quot;))&quot;, :offset 42, :ns &quot;learn.article&quot;} {:command &quot;(apply str (enlive/emit* ((enlive/wrap :div) \&quot;ssss\&quot;)))&quot;, :offset 54, :ns &quot;learn.article&quot;} {:command &quot;(defn- wrap-paragraph [text]\n  (map #(apply str (enlive/emit* ((enlive/wrap :div) %)))\n       (str/split text #\&quot;\\n\&quot;)))\n\n(wrap-paragraph \&quot;sadfasdf\\nasdfasdf\&quot;)&quot;, :offset 157, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(defn- wrap-paragraph [text]\n  (map #(apply str (enlive/emit* ((enlive/wrap :p) %)))\n       (str/split text #\&quot;\\n\&quot;)))\n\n\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                  :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 2072, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          ({:title (wrap-paragraph (str/trim (change-article (:title original-article))))\n            :article (change-article (:article original-article))})\n          #_(push-article domain {:title (wrap-paragraph (str/trim (change-article (:title original-article))))\n                                  :article (change-article (:article original-article))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 672, :ns &quot;learn.article&quot;} {:command &quot;1&quot;, :offset 1, :ns &quot;grapdata.core&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (println {:title (wrap-paragraph (str/trim (change-article (:title original-article))))\n                    :article (change-article (:article original-article))})\n          #_(push-article domain {:title (wrap-paragraph (str/trim (change-article (:title original-article))))\n                                  :article (change-article (:article original-article))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 690, :ns &quot;learn.article&quot;} {:command &quot;(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (println {:title (str/trim (change-article (:title original-article)))\n                    :article (change-article (:article original-article))})\n          #_(push-article domain {:title (wrap-paragraph (str/trim (change-article (:title original-article))))\n                                  :article (change-article (:article original-article))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 1531, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 3 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (println original-article)\n          #_(println {:title (str/trim (change-article (:title original-article)))\n                    :article (change-article (:article original-article))})\n          #_(push-article domain {:title (wrap-paragraph (str/trim (change-article (:title original-article))))\n                                  :article (change-article (:article original-article))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 711, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 3 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          #_(println original-article)\n          (println {:title (str/trim (change-article (:title original-article)))\n                    :article (wrap-paragraph (change-article (:article original-article)))})\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                  :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 729, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))\n\n(defn- wrap-paragraph [text]\n  (apply str (map #(apply str (enlive/emit* ((enlive/wrap :p) %)))\n                  (str/split text #\&quot;\\n\&quot;))))\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 2091, :ns &quot;learn.article&quot;} {:command &quot;(parse-article (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/vaping-and-smoking/\&quot;}))\n&quot;, :offset 107, :ns &quot;learn.article&quot;} {:command &quot;(parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/vaping-and-smoking/\&quot;})))&quot;, :offset 114, :ns &quot;learn.article&quot;} {:command &quot;(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/vaping-and-smoking/\&quot;})))]\n  {:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})\n&quot;, :offset 279, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 510, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          {:title (str/trim (change-article (:title original-article)))\n           :article (wrap-paragraph (change-article (:article original-article)))}\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 667, :ns &quot;learn.article&quot;} {:command &quot;\n(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  {:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})\n\n&quot;, :offset 336, :ns &quot;learn.article&quot;} {:command &quot;\n(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  original-article\n  #_{:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})\n\n&quot;, :offset 357, :ns &quot;learn.article&quot;} {:command &quot;(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  (change-article (:article original-article))\n  #_{:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})\n&quot;, :offset 383, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body))&quot;, :offset 419, :ns &quot;learn.article&quot;} {:command &quot;(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (let [resp (-&gt;\n               (http/post\n                 \&quot;http://wordai.com/users/turing-api.php\&quot;\n                 {:form-params {:s text\n                                :quality \&quot;Readable\&quot;\n                                :email \&quot;327220796@qq.com\&quot;\n                                :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                                :output \&quot;json\&quot;\n                                :nooriginal \&quot;on\&quot;\n                                :nonested  \&quot;on\&quot;}})\n               :body\n               (json/parse-string true))]\n    (if (= (:status resp) \&quot;Failure\&quot;)\n      (throw (Exception. (:error resp)))\n      (-&gt; resp\n          :text\n          (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;))))\n  #_(-&gt;\n    (http/post\n      \&quot;http://wordai.com/users/turing-api.php\&quot;\n      {:form-params {:s text\n                     :quality \&quot;Readable\&quot;\n                     :email \&quot;327220796@qq.com\&quot;\n                     :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                     :output \&quot;json\&quot;\n                     :nooriginal \&quot;on\&quot;\n                     :nonested  \&quot;on\&quot;}})\n    :body\n    (json/parse-string true)\n    :text\n    (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n    (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))&quot;, :offset 1370, :ns &quot;learn.article&quot;} {:command &quot;(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  (change-article (:article original-article))\n  #_{:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})&quot;, :offset 382, :ns &quot;learn.article&quot;} {:command &quot;(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  {:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})&quot;, :offset 333, :ns &quot;learn.article&quot;} {:command &quot;(defn- change-nodes [html]\n  (-&gt;\n    html\n    (StringReader.)\n    (enlive/html-resource)))\n\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (let [resp (-&gt;\n               (http/post\n                 \&quot;http://wordai.com/users/turing-api.php\&quot;\n                 {:form-params {:s text\n                                :quality \&quot;Readable\&quot;\n                                :email \&quot;327220796@qq.com\&quot;\n                                :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                                :output \&quot;json\&quot;\n                                :nooriginal \&quot;on\&quot;\n                                :nonested  \&quot;on\&quot;}})\n               :body\n               (json/parse-string true))]\n    (if (= (:status resp) \&quot;Failure\&quot;)\n      (throw (Exception. (:error resp)))\n      (-&gt; resp\n          :text\n          (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))))\n\n(defn- wrap-paragraph [text]\n  (apply str (map #(apply str (enlive/emit* ((enlive/wrap :p) %)))\n                  (str/split text #\&quot;\\n\&quot;))))\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n#_(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  {:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          {:title (str/trim (change-article (:title original-article)))\n           :article (wrap-paragraph (change-article (:article original-article)))}\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 2935, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {:url url\n                                   :article (wrap-paragraph (change-article (:article original-article)))\n                                   :title (str/trim (change-article (:title original-article)))})\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 761, :ns &quot;learn.article&quot;} {:command &quot;(def article-db\n  {:classname \&quot;com.mysql.jdbc.Driver\&quot;\n   :subprotocol \&quot;mysql\&quot;\n   :subname \&quot;//127.0.0.1/article\&quot;\n   :user \&quot;root\&quot;\n   :password \&quot;a5235013\&quot;\n   :sslmode \&quot;require\&quot;})\n\n(hugsql/def-db-fns \&quot;sql/article.sql\&quot; {:quoting :mysql})\n\n(defn- data-insert!\n  [table data]\n  (insert-table-data article-db {:table table :cols (keys data) :vals (vals data)}))\n&quot;, :offset 354, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {:url url\n                                   :article (wrap-paragraph (change-article (:article original-article)))\n                                   :title (str/trim (change-article (:title original-article)))})\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 760, :ns &quot;learn.article&quot;} {:command &quot;(data-insert! \&quot;article\&quot; {:url \&quot;1111\&quot;\n                         :article \&quot;1111333\&quot;\n                         :title \&quot;5555\&quot;})&quot;, :offset 121, :ns &quot;learn.article&quot;} {:command &quot;(data-insert! \&quot;article\&quot; {\&quot;url\&quot; \&quot;1111\&quot;\n                         \&quot;article\&quot; \&quot;1111333\&quot;\n                         \&quot;title\&quot; \&quot;5555\&quot;})&quot;, :offset 124, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                   \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                   \&quot;title\&quot; (str/trim (change-article (:title original-article)))})\n          #_(push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 764, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                   \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                   \&quot;title\&quot; (str/trim (change-article (:title original-article)))})\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 763, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                   \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                   \&quot;title\&quot; (str/trim (change-article (:title original-article)))})\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n\n&quot;, :offset 764, :ns &quot;learn.article&quot;} {:command &quot;(defn- change-nodes [html]\n  (-&gt;\n    html\n    (StringReader.)\n    (enlive/html-resource)))\n\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (let [resp (-&gt;\n               (http/post\n                 \&quot;http://wordai.com/users/turing-api.php\&quot;\n                 {:form-params {:s text\n                                :quality \&quot;Readable\&quot;\n                                :email \&quot;327220796@qq.com\&quot;\n                                :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                                :output \&quot;json\&quot;\n                                :nooriginal \&quot;on\&quot;\n                                :nonested  \&quot;on\&quot;}})\n               :body\n               (json/parse-string true))]\n    (if (= (:status resp) \&quot;Failure\&quot;)\n      (throw (Exception. (:error resp)))\n      (-&gt; resp\n          :text\n          (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))))\n\n(defn- wrap-paragraph [text]\n  (apply str (map #(apply str (enlive/emit* ((enlive/wrap :p) %)))\n                  (str/split text #\&quot;\\n\&quot;))))\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n#_(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  {:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                   \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                   \&quot;title\&quot; (str/trim (change-article (:title original-article)))})\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 3029, :ns &quot;learn.article&quot;} {:command &quot;(ns learn.article\n  (:require [clj-http.client :as http]\n            [clojure.string :as str]\n            [hugsql.core :as hugsql]\n            [net.cgrand.enlive-html :as enlive]\n            [clojure.core.async :as async]\n            [clojure.data]\n            [cheshire.core :as json])\n  (:import (java.io StringReader)))\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 数据库相关\n(def article-db\n  {:classname \&quot;com.mysql.jdbc.Driver\&quot;\n   :subprotocol \&quot;mysql\&quot;\n   :subname \&quot;//127.0.0.1/article\&quot;\n   :user \&quot;root\&quot;\n   :password \&quot;a5235013\&quot;\n   :sslmode \&quot;require\&quot;})\n\n(hugsql/def-db-fns \&quot;sql/article.sql\&quot; {:quoting :mysql})\n\n(defn- data-insert!\n  [table data]\n  (insert-table-data article-db {:table table :cols (keys data) :vals (vals data)}))\n&quot;, :offset 716, :ns &quot;grapdata.core&quot;} {:command &quot;(defn- change-nodes [html]\n  (-&gt;\n    html\n    (StringReader.)\n    (enlive/html-resource)))\n\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (let [resp (-&gt;\n               (http/post\n                 \&quot;http://wordai.com/users/turing-api.php\&quot;\n                 {:form-params {:s text\n                                :quality \&quot;Readable\&quot;\n                                :email \&quot;327220796@qq.com\&quot;\n                                :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                                :output \&quot;json\&quot;\n                                :nooriginal \&quot;on\&quot;\n                                :nonested  \&quot;on\&quot;}})\n               :body\n               (json/parse-string true))]\n    (if (= (:status resp) \&quot;Failure\&quot;)\n      (throw (Exception. (:error resp)))\n      (-&gt; resp\n          :text\n          (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))))\n\n(defn- wrap-paragraph [text]\n  (apply str (map #(apply str (enlive/emit* ((enlive/wrap :p) %)))\n                  (str/split text #\&quot;\\n\&quot;))))\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n#_(let [original-article (parse-article (:html (select-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/boom-watch-e-cig-battery-explode-womans-purse-nevada-city-council-meeting/\&quot;})))]\n  {:title (str/trim (change-article (:title original-article)))\n   :article (wrap-paragraph (change-article (:article original-article)))})\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n             {:form-params {:domain domain\n                            :title (:title article-info)\n                            :content (:article article-info)}}))\n\n\n(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (if-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                   \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                   \&quot;title\&quot; (str/trim (change-article (:title original-article)))})\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 3030, :ns &quot;learn.article&quot;} {:command &quot;(defn- do-push-article-blog\n  [domain]\n  (let [html-list (take 5 (get-all-article-html article-db))]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (println url)\n        (when-let [original-article (parse-article html)]\n          (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                   \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                   \&quot;title\&quot; (str/trim (change-article (:title original-article)))})\n          (push-article domain {:title (str/trim (change-article (:title original-article)))\n                                :article (wrap-paragraph (change-article (:article original-article)))}))))))\n(do-push-article-blog \&quot;www.vaping10.com\&quot;)\n&quot;, :offset 764, :ns &quot;learn.article&quot;} {:command &quot;(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (println (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n                      {:form-params {:domain domain\n                                     :title (:title article-info)\n                                     :content (:article article-info)}})))&quot;, :offset 316, :ns &quot;learn.article&quot;} {:command &quot;(do-push-article-blog \&quot;www.vaping10.com\&quot;)&quot;, :offset 41, :ns &quot;learn.article&quot;} {:command &quot;(hugsql/def-db-fns \&quot;sql/article.sql\&quot; {:quoting :mysql})&quot;, :offset 55, :ns &quot;learn.article&quot;} {:command &quot;(get-article-by-url article-db {:url \&quot;3333\&quot;})&quot;, :offset 45, :ns &quot;learn.article&quot;} {:command &quot;(get-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/vaping-and-smoking/\&quot;})&quot;, :offset 87, :ns &quot;learn.article&quot;} {:command &quot;\n(let [article-info (get-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/vaping-and-smoking/\&quot;})]\n  (push-article \&quot;www.vaping10.com\&quot; article-info))&quot;, :offset 158, :ns &quot;learn.article&quot;} {:command &quot;(let [article-info (get-article-by-url article-db {:url \&quot;http://www.vaporvanity.com/vaping-and-smoking/\&quot;})]\n  (push-article \&quot;www.vaping10.com\&quot; article-info))&quot;, :offset 157, :ns &quot;learn.article&quot;} {:command &quot;(Thread/sleep 10000)&quot;, :offset 20, :ns &quot;learn.article&quot;} {:command &quot;\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 数据库相关\n(def article-db\n  {:classname \&quot;com.mysql.jdbc.Driver\&quot;\n   :subprotocol \&quot;mysql\&quot;\n   :subname \&quot;//127.0.0.1/article\&quot;\n   :user \&quot;root\&quot;\n   :password \&quot;a5235013\&quot;\n   :sslmode \&quot;require\&quot;})\n\n(hugsql/def-db-fns \&quot;sql/article.sql\&quot; {:quoting :mysql})\n\n(defn- data-insert!\n  [table data]\n  (insert-table-data article-db {:table table :cols (keys data) :vals (vals data)}))\n\n(defn- save-html\n  \&quot;保存网页内容\&quot;\n  [url html]\n  (data-insert! \&quot;source_article\&quot; {\&quot;url\&quot; url \&quot;html\&quot; (:body html)}))\n\n&quot;, :offset 503, :ns &quot;learn.article&quot;} {:command &quot;(defn- change-nodes [html]\n  (-&gt;\n    html\n    (StringReader.)\n    (enlive/html-resource)))\n\n\n(defn change-article\n  \&quot;将一篇文章转成另一篇文章\&quot;\n  [text]\n  (Thread/sleep 10000)\n  (let [resp (-&gt;\n               (http/post\n                 \&quot;http://wordai.com/users/turing-api.php\&quot;\n                 {:form-params {:s text\n                                :quality \&quot;Readable\&quot;\n                                :email \&quot;327220796@qq.com\&quot;\n                                :hash \&quot;7785dd959e67f57afa766d6aecea2629\&quot;\n                                :output \&quot;json\&quot;\n                                :nooriginal \&quot;on\&quot;\n                                :nonested  \&quot;on\&quot;}})\n               :body\n               (json/parse-string true))]\n    (if (= (:status resp) \&quot;Failure\&quot;)\n      (throw (Exception. (:error resp)))\n      (-&gt; resp\n          :text\n          (str/replace #\&quot;\\&lt;p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\&lt;/p\\&gt;\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{ \\}\&quot; \&quot;\&quot;)\n          (str/replace #\&quot;\\{\\}\&quot; \&quot;\&quot;)))))\n\n(defn- wrap-paragraph [text]\n  (apply str (map #(apply str (enlive/emit* ((enlive/wrap :p) %)))\n                  (str/split text #\&quot;\\n\&quot;))))\n\n(defn- parse-article\n  \&quot;将HTML里面的文章提取出来\&quot;\n  [html]\n  (let [nodes (change-nodes html)\n        title-node (enlive/select nodes [:header.entry-header :h1.entry-title])\n        content-node (enlive/select nodes [:div.entry-content :&gt; :p])]\n    (when (and (not-empty title-node) (not-empty content-node))\n      {:title (-&gt; title-node\n                  first\n                  (enlive/text))\n       :article (-&gt; content-node\n                    (#(map (fn [n]\n                             (enlive/text n))\n                           %))\n                    (#(str/join \&quot;\\n\&quot; %)))})))\n\n\n(defn- push-article\n  \&quot;将文章推送到指定的博客\&quot;\n  [domain article-info]\n  (println (http/post \&quot;http://manage.ecigview.com/posts/create\&quot;\n                      {:form-params {:domain domain\n                                     :title (:title article-info)\n                                     :content (:article article-info)}})))\n&quot;, :offset 1990, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- parse-save-articles\n  []\n  (let [html-list (get-all-article-html article-db)]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (when (get-article-by-url article-db {:url url})\n          (println url)\n          (when-let [original-article (parse-article html)]\n            (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                     \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                     \&quot;title\&quot; (str/trim (change-article (:title original-article)))})))))))\n\n\n(parse-save-articles)\n&quot;, :offset 601, :ns &quot;learn.article&quot;} {:command &quot;\n(defn- parse-save-articles\n  []\n  (let [html-list (get-all-article-html article-db)]\n    (doseq [info html-list]\n      (let [html (:html info)\n            url (:url info)]\n        (when-not (get-article-by-url article-db {:url url})\n          (println url)\n          (when-let [original-article (parse-article html)]\n            (data-insert! \&quot;article\&quot; {\&quot;url\&quot; url\n                                     \&quot;article\&quot; (wrap-paragraph (change-article (:article original-article)))\n                                     \&quot;title\&quot; (str/trim (change-article (:title original-article)))})))))))\n\n\n(parse-save-articles)&quot;, :offset 604, :ns &quot;learn.article&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.repl">
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <configuration name="newdriver" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="grapdata" />
      <setting name="path" value="$PROJECT_DIR$/src/learn/newdriver.clj" />
      <setting name="namespace" value="" />
      <setting name="useLein" value="false" />
      <setting name="profiles" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/learn" />
    </configuration>
    <configuration name="repl" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="grapdata" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
    </configuration>
    <list size="2">
      <item index="0" class="java.lang.String" itemvalue="Clojure REPL.repl" />
      <item index="1" class="java.lang.String" itemvalue="Clojure Application.newdriver" />
    </list>
    <recent_temporary>
      <list size="1">
        <item index="0" class="java.lang.String" itemvalue="Clojure Application.newdriver" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="842f1f30-5306-42cb-bbaf-cb86e780eb0d" name="Default" comment="" />
      <created>1502356526041</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1502356526041</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1936" height="1056" extended-state="7" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="DB Execution Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32934782" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.32782516" sideWeight="0.5043478" order="3" side_tool="true" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32995737" sideWeight="0.49130434" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="MaxCompute Job" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="MaxCompute Job Explorer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.49565217" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="MaxCompute Project Explorer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="DB Browser" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.329718" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.22921109" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="MaxCompute Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32934782" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.log" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="9" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="298">
          <caret line="3702" column="10" lean-forward="false" selection-start-line="3702" selection-start-column="10" selection-end-line="3702" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/cps.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/learntimbre.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/task/common_task.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="126">
          <caret line="7" column="0" lean-forward="true" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/tools/phantom_graper.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="144">
          <caret line="8" column="20" lean-forward="false" selection-start-line="8" selection-start-column="9" selection-end-line="8" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/clj-webdriver/clj-webdriver/0.7.1/clj-webdriver-0.7.1.jar!/clj_webdriver/wait.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="198">
          <caret line="11" column="3" lean-forward="false" selection-start-line="11" selection-start-column="3" selection-end-line="11" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/clj-webdriver/clj-webdriver/0.7.1/clj-webdriver-0.7.1.jar!/clj_webdriver/taxi.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="681" column="43" lean-forward="false" selection-start-line="681" selection-start-column="43" selection-end-line="681" selection-end-column="43" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/target/base+system+user+dev/repl-port">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/korma/korma/0.4.3/korma-0.4.3.jar!/korma/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="67">
          <caret line="476" column="0" lean-forward="false" selection-start-line="476" selection-start-column="0" selection-end-line="476" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/datawarehouse/coutchdetail.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/datawarehouse/dbsqldetail.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="72">
          <caret line="4" column="0" lean-forward="false" selection-start-line="4" selection-start-column="0" selection-end-line="4" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/users.sql" />
    <entry file="jar://$MAVEN_REPOSITORY$/com/layerware/hugsql-core/0.4.7/hugsql-core-0.4.7.jar!/hugsql/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1160">
          <caret line="514" column="10" lean-forward="false" selection-start-line="514" selection-start-column="10" selection-end-line="514" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/name/female-names.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="786">
          <caret line="4274" column="5" lean-forward="false" selection-start-line="4274" selection-start-column="5" selection-end-line="4274" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/name/male-names.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="498">
          <caret line="1198" column="6" lean-forward="true" selection-start-line="1198" selection-start-column="6" selection-end-line="1198" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/name/names.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="858">
          <caret line="1322" column="6" lean-forward="false" selection-start-line="1322" selection-start-column="6" selection-end-line="1322" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/clutch.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/log4j.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="108">
          <caret line="6" column="22" lean-forward="true" selection-start-line="6" selection-start-column="22" selection-end-line="6" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/phantomjsdriver.log">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/doc/main.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/sql/mail.sql" />
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="306">
          <caret line="17" column="8" lean-forward="true" selection-start-line="17" selection-start-column="8" selection-end-line="17" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/dbconfig.example.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="288">
          <caret line="16" column="23" lean-forward="true" selection-start-line="16" selection-start-column="23" selection-end-line="16" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/io/forward/clojure-mail/1.0.7/clojure-mail-1.0.7.jar!/clojure_mail/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2892">
          <caret line="215" column="6" lean-forward="false" selection-start-line="215" selection-start-column="6" selection-end-line="215" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/sql/wordpress.sql" />
    <entry file="file://$PROJECT_DIR$/src/learn/wordpress.clj" />
    <entry file="file://$PROJECT_DIR$/src/learn/twitter.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="342">
          <caret line="19" column="22" lean-forward="false" selection-start-line="19" selection-start-column="22" selection-end-line="19" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/utils.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="72">
          <caret line="4" column="26" lean-forward="true" selection-start-line="4" selection-start-column="26" selection-end-line="4" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/learndriverweb.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="450">
          <caret line="25" column="29" lean-forward="false" selection-start-line="25" selection-start-column="29" selection-end-line="25" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/email.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="558">
          <caret line="31" column="0" lean-forward="true" selection-start-line="31" selection-start-column="0" selection-end-line="31" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/facebook.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="468">
          <caret line="26" column="0" lean-forward="true" selection-start-line="26" selection-start-column="0" selection-end-line="26" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/clj-webdriver/clj-webdriver/0.7.1/clj-webdriver-0.7.1.jar!/clj_webdriver/driver.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="413">
          <caret line="25" column="39" lean-forward="false" selection-start-line="25" selection-start-column="39" selection-end-line="25" selection-end-column="39" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/seleniumhq/selenium/selenium-firefox-driver/2.45.0/selenium-firefox-driver-2.45.0.jar!/org/openqa/selenium/firefox/FirefoxProfile.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="28">
          <caret line="132" column="86" lean-forward="false" selection-start-line="132" selection-start-column="86" selection-end-line="132" selection-end-column="86" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/seleniumhq/selenium/selenium-api/2.44.0/selenium-api-2.44.0.jar!/org/openqa/selenium/remote/DesiredCapabilities.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="162">
          <caret line="22" column="11" lean-forward="false" selection-start-line="22" selection-start-column="11" selection-end-line="22" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/clj-http/clj-http/3.7.0/clj-http-3.7.0.jar!/clj_http/client.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="298">
          <caret line="1194" column="6" lean-forward="false" selection-start-line="1194" selection-start-column="6" selection-end-line="1194" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/name.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="858">
          <caret line="104" column="26" lean-forward="true" selection-start-line="104" selection-start-column="26" selection-end-line="104" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/newdriver.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="468">
          <caret line="26" column="52" lean-forward="true" selection-start-line="26" selection-start-column="52" selection-end-line="26" selection-end-column="52" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/phonecode.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="54">
          <caret line="3" column="38" lean-forward="true" selection-start-line="3" selection-start-column="38" selection-end-line="3" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/dbconfig.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="162">
          <caret line="9" column="0" lean-forward="true" selection-start-line="9" selection-start-column="0" selection-end-line="9" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/grapdata/common.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/grapdata/grap_records.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/grapdata/grap_protocols.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/grapdata/grap_executor.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-470">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/grapdata/grap_engine.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="540">
          <caret line="30" column="55" lean-forward="true" selection-start-line="30" selection-start-column="55" selection-end-line="30" selection-end-column="55" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/pingtai/main.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="396">
          <caret line="95" column="33" lean-forward="false" selection-start-line="95" selection-start-column="20" selection-end-line="95" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/sql/users.sql">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-251">
          <caret line="19" column="34" lean-forward="false" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="324">
          <caret line="18" column="16" lean-forward="false" selection-start-line="18" selection-start-column="16" selection-end-line="18" selection-end-column="16" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/enlive/enlive/1.1.6/enlive-1.1.6.jar!/net/cgrand/enlive_html.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="318">
          <caret line="444" column="53" lean-forward="false" selection-start-line="444" selection-start-column="53" selection-end-line="444" selection-end-column="53" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/db.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="198">
          <caret line="11" column="19" lean-forward="false" selection-start-line="11" selection-start-column="19" selection-end-line="11" selection-end-column="19" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/sql/article.sql">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="414">
          <caret line="26" column="9" lean-forward="true" selection-start-line="26" selection-start-column="9" selection-end-line="26" selection-end-column="19" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/learn/article.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="448">
          <caret line="177" column="21" lean-forward="true" selection-start-line="177" selection-start-column="21" selection-end-line="177" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>